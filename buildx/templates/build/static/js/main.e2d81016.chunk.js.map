{"version":3,"sources":["components/Dashboard.js","components/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Dashboard","React","createElement","Register","formData","setFormData","useState","username","email","password","error","setError","success","setSuccess","navigate","useNavigate","handleChange","e","[object Object]","target","name","value","className","style","color","onSubmit","async","preventDefault","axios","post","err","response","data","type","onChange","required","GoogleLogin","clientId","process","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","profileObj","token","tokenId","onFailure","console","cookiePolicy","App","Router","Routes","Route","path","element","Home","About","Contact","component","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e2d81016.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <h1>Welcome to the Dashboard</h1>\n      <p>This is where you will see your posts, analytics, and more.</p>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = () => {\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  const { username, email, password } = formData;\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // Submit the form data to the backend for registration\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/api/auth/register/', formData);\n      setSuccess('Registration successful!');\n      setError('');\n      navigate('/login');  // Redirect to login page after successful registration\n    } catch (err) {\n      setError(err.response ? err.response.data.error : 'Something went wrong. Please try again.');\n      setSuccess('');\n    }\n  };\n\n  // Google OAuth Success handler\n  const googleSuccess = async (response) => {\n    try {\n      const result = response?.profileObj;\n      const token = response?.tokenId;\n\n      // Send token to backend for verification and registration\n      const res = await axios.post('http://localhost:8000/api/auth/google/', {\n        token,\n      });\n\n      setSuccess('Google sign-up successful!');\n      navigate('/dashboard');  // Redirect to dashboard after successful Google sign-up\n    } catch (error) {\n      setError('Google sign-up failed. Try again.');\n    }\n  };\n\n  // Google OAuth Failure handler\n  const googleFailure = (error) => {\n    console.error('Google sign-up error', error);\n    setError('Google sign-up failed. Please try again.');\n  };\n\n  return (\n    <div className=\"register-container\">\n      <h2>Register</h2>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {success && <p style={{ color: 'green' }}>{success}</p>}\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Register</button>\n      </form>\n\n      <div className=\"google-signup\">\n        <h3>Or sign up with Google</h3>\n        <GoogleLogin\n          clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}  // Ensure this environment variable is set in .env\n          buttonText=\"Sign up with Google\"\n          onSuccess={googleSuccess}\n          onFailure={googleFailure}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from 'react'; \nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom'; \nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Contact from './pages/Contact';\nimport Dashboard from './components/Dashboard';\nimport Register from './components/Register';\n\nfunction App() {\n  return (\n    <Router>\n      <Routes> {/* Use Routes instead of Switch */}\n        <Route path=\"/\" element={<Home />} /> {/* Use element prop instead of component */}\n        <Route path=\"/about\" element={<About />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/dashboard\" component={Dashboard} />\n        <Route path=\"/register\" component={Register} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}